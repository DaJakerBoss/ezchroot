#!/bin/bash
#I made a chroot program bc I am forgetful

## Welcome to EasyChroot ##
## v0.0.6
## I'm just gonna list the commands for now
## mkdir /mnt
## cd /
## mount -t [ext3|ext4] /dev/sdXY /mnt
## mount -t proc proc /mnt/proc
## mount -t sysfs sys /mnt/sys
## mount -o bind /dev /mnt/dev
## chroot /mnt /bin/bash
## sudo umount --force /dev/sdXY

# Startup
clear
echo "EasyChroot v. 0.0.6"
echo ""

## Clear VARS
d="0"
f="0"
s="0"

## VARS: d {drive} s {silent} m {mount}
while getopts "d:sm:" arg; do
	case "${arg}"
	in
	d)
		d=$OPTARG
		;;
	f)
		f=$OPTARG
		;;
	s)
		s="y"
		;;
	esac
done

if [[ $d != "0" ]] && [[ $s = "0" ]]
	then
		echo "User specified target device '$d'"
fi
if [[ $f != "0" ]] && [[ $s = "0" ]]
	then
		echo "User specified chroot dir '$f'"
fi
exit

# Check if root
if [[ $EUID -ne 0 ]];
	then
		echo "Sorry, but this script must be run as root."
		echo "Try running 'sudo ./ezchroot' or run 'sudo -i' before execution"
		## clear
   	exit 1
fi

##WSL Support##
#echo "Are you using WSL?"
#echo "(Yes=y, No=n)"
#read WSL
wsl=""

if [[ $WSL = "y" ]]
	then
		echo ""
		echo "You must install an ext mounter for Windows"
		echo "Have you mounted your partitions in Windows?"
		read win
		## Dependency check. Kind of.
		if [[ $win = "y" ]]
			then
				echo ""
				echo "Okay! To what partition have you mounted your linux partition?"
				echo "Just the partition letter in lower case"
				read winmount
				echo ""
				echo "entering partition"
				mount -t drvfs "$winmount": /mnt/"$winmount"/
				cd /mnt/"$winmount"
				sleep 1
				echo "getting ready"
				mount -t proc proc /mnt/"$winmount"/proc
				mount -t sysfs sys /mnt/"$winmount"/sys
				mount -o bind /dev /mnt/"$winmount"/dev
				mount --bind /etc/resolv.conf /mnt/"$winmount"/etc/resolv.conf
				sleep 1
				echo "chroot-ing *MAKE SURE TO KILL EVERYTHING BEFORE RUNNING THE EXIT COMMAND*"
				sleep 5
				chroot /mnt/"$winmount" /bin/bash
				umount -l /mnt/"$winmount"
				exit
			else
				echo ""
				echo "Okay, you can download Ext2Fsd and mount your partition"
				## clear
				exit
		fi
fi

##Linux Support
if [[ $d != "0" ]]
then echo ""
else
echo ""
echo "Do you know where your drive is located?"
read locate
echo ""
if [[ $locate = "y" ]]
	then
		echo "Great! Put it in the form of sdXY for me"
		echo "e.g. sda2, or sdb3, or sdc1"
		read d
		echo ""
	else
		part=`command -v parted`
		if [[ $part = "/sbin/parted" ]]
			then
				parted -l
				echo "From this list, type your target partition in the form of 'sdxY'"
				echo "e.g. sda2, or sdb3, or sdc1"
				read d
				echo ""
			else
				fedora=`awk '/ID=fedora/{print}' /etc/*release`
				distlk=`awk '/ID_LIKE/{print}' /etc/*release`
				if [[ $distlk = "ID_LIKE=debian" ]] || [[ $distlk = 'ID_LIKE="suse"' ]] || [[ $fedora = "ID=fedora" ]]
					then
					echo "Sorry, but parted is required to run this script"
					echo "Don't worry, we can install it for you."
					echo "Would you like us to do that?"
					read inst
					if [[ $inst = "y" ]]
						then
						if [[ $dist = "ID_LIKE=debian" ]]
							then
								apt install parted --assume-yes
								clear
								parted -l
								echo "From this list, type your target partition in the form of 'sdXY'"
								echo "e.g. sda2, or sdb3, or sdc1"
								read d
								echo ""
						fi
						if [[ $dist = 'ID_LIKE="suse"' ]]
							then
								zypper -n install parted
								clear
								parted -l
								echo "From this list, type your target partition in the form of 'sdXY'"
								echo "e.g. sda2, or sdb3, or sdc1"
								read d
								echo ""
						fi
						if [[ $fedora = "ID=fedora" ]]
							then
								dnf install parted -y
								clear
								parted -l
								echo "From this list, type your target partition in the form of 'sdXY'"
								echo "e.g. sda2, or sd3, or sdc1"
								read d
								echo ""
						fi
						else
						echo "Sorry! You need to install parted before we can continue"
						echo "I am not programed to install it on your system."
						exit
					fi
				fi
		fi
fi
fi
echo "Great, let's get started"
echo "Mounting"
if [[ $f != "0" ]]
	then
		echo ""
	else
		f="/mnt"
fi
mkdir "$f"
mount /dev/"$d" "$f"
mount -t proc proc "$f"/proc
mount -t sysfs sys "$f"/sys
mount -o bind /dev "$f"/mnt/dev
mount --bind /etc/resolv.conf "$f"/etc/resolv.conf
clear
echo "chroot-ing! *MAKE SURE TO KILL EVERYTHING BEFORE RUNNING THE EXIT COMMAND!!!*"
sleep 5
chroot /mnt /bin/bash
exec umount -l /dev/"$drive"
clear
exit
